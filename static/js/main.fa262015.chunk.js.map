{"version":3,"sources":["redux/actions/filmsActions.js","components/Film.js","components/AllFilms.js","config.js","redux/actions/postActions.js","components/PostForm.js","components/Post.js","components/AllPosts.js","App.js","redux/reducers/newsFilmsReducer.js","redux/reducers/postReducer.js","redux/reducers/reducers.js","redux/store.js","index.js"],"names":["GET_FILM_NEWS","connect","renderList","useSelector","state","allFilms","films","map","film","id","head","body","image","link","className","Card","Img","variant","src","url","Body","Title","Text","Button","target","href","AllFilms","dispatch","useDispatch","fetchFilms","a","options","method","params","tconst","limit","headers","axios","request","then","response","data","items","type","payload","catch","error","console","useEffect","ADD_POST","setItem","title","message","Date","toUTCString","PostForm","handleSubmit","e","preventDefault","getTitle","value","getMessage","props","onSubmit","this","required","placeholder","ref","input","rows","cols","Component","Post","allPosts","posts","index","border","Header","App","initialState","reducers","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa262015.chunk.js","sourcesContent":["export const GET_FILM_NEWS = 'GET_FILM_NEWS';\n\nexport const getFilms = (films) => {\n  return {\n    type: GET_FILM_NEWS,\n    payload: films\n  };\n};","import React from 'react';\nimport { connect, useSelector } from 'react-redux';\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nconst Film = () => {\n  const films = useSelector((state) => state.allFilms.films);\n\n  const renderList = films.map((film) => {\n    const { id, head, body, image, link } = film;\n    return (\n      < div key={id} className='cardContainer'>\n        <Card className='card'>\n          <Card.Img variant=\"top\" src={image.url} />\n          <Card.Body>\n            <Card.Title>{head}</Card.Title>\n            <Card.Text className='module lineClamp'>\n              {body}\n            </Card.Text>\n            <Button variant=\"primary\" target='_blank' href={link}>\n              Ver detalle\n            </Button>\n          </Card.Body>\n\n        </Card>\n      </div >\n    );\n  });\n\n  return (\n    <div className='containerFilms col-md-12'>\n      {renderList}\n    </div>\n  );\n};\n\nexport default connect()(Film);","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { getFilms } from '../redux/actions/filmsActions';\nimport Film from './Film';\nimport { MY_API_KEY } from '../config';\n\nconst AllFilms = () => {\n  // const films = useSelector((film) => film);\n  const dispatch = useDispatch();\n\n  const fetchFilms = async () => {\n\n    const options = {\n      method: 'GET',\n      url: 'https://imdb8.p.rapidapi.com/title/get-news',\n      params: { tconst: 'tt0944947', limit: '8' },\n      headers: {\n        'x-rapidapi-key': MY_API_KEY,\n        'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n      }\n    };\n\n    await axios.request(options)\n      .then(response => {\n        dispatch(getFilms(response.data.items));\n      }).catch(error => {\n        console.error(error);\n      });\n\n  };\n\n  useEffect(() => {\n    fetchFilms();\n  }, []);\n\n  // console.log('All FILMS', films);\n  return (\n    <div>\n      <h2>Mira Aquí Algunas Noticias Sobre Lo Más Destacado De Los Espectáculos</h2>\n      <Film />\n    </div>\n  );\n};\n\nexport default AllFilms;","const MY_API_KEY = 'b6f8c79392msh41d9675a150d6d1p164468jsnde54fe2c8788';\nexport { MY_API_KEY };","export const ADD_POST = 'ADD_POST';\n\nexport const setItem = (title, message) => {\n  const data =\n  {\n    id: new Date().toUTCString(),\n    title: title,\n    message: message\n  };\n\n  return {\n    type: ADD_POST,\n    payload: data\n  };\n};\n","import React, { Component } from 'react';\nimport { setItem } from '../redux/actions/postActions';\nimport { connect } from 'react-redux';\n\n\nclass PostForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const message = this.getMessage.value;\n\n    this.props.dispatch(setItem(title, message));\n    this.getTitle.value = '';\n    this.getMessage.value = '';\n  };\n\n  render() {\n    return (\n      <div className='col-md-12'>\n        <div>\n          <h4>Create Post</h4>\n          <form className='postForm' onSubmit={this.handleSubmit}>\n            <input required type=\"text\" placeholder=\"Enter Post Title\" ref={(input) => this.getTitle = input} />\n            <textarea required rows=\"3\" cols=\"28\" placeholder=\"Enter Post\" ref={(input) => this.getMessage = input} />\n            <button className='btn btn-primary'>Post</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(PostForm);","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\n\nconst Post = () => {\n\n  const data = useSelector(state => state.allPosts.posts);\n\n  return (\n    <div className='containerPosts col-md-12'>\n      {\n        data.map((posts, index) => {\n          const { id, title, message } = posts;\n          return (\n            <>\n              <Card key={index} border=\"info\" className='cardPost'>\n                <Card.Header className='headerPost'>Fecha de Publicación: {id}</Card.Header>\n                <Card.Body>\n                  <Card.Title className='cardTxt'>{title}</Card.Title>\n                  <Card.Text className='cardTxt'>\n                    {message}\n                  </Card.Text>\n                </Card.Body>\n              </Card></>\n          );\n        })\n      }\n    </div>\n  );\n};\n\nexport default Post;","import React from 'react';\nimport { connect, useSelector } from 'react-redux';\n\nimport PostForm from './PostForm';\nimport Post from './Post';\n\nconst AllPosts = () => {\n\n  return (\n    <div className='containerPosts col-md-12'>\n      <h1>Comentarios</h1>\n      <p>Aquí puedes agregar tú opinión o comentario sobre alguna de las notas que estas leyendo.</p>\n      <PostForm />\n      <Post />\n\n    </div>\n  );\n};\n\nexport default connect()(AllPosts);","import React, { Component } from 'react';\nimport './App.css';\nimport AllFilms from './components/AllFilms';\nimport AllPosts from './components/AllPosts';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Reto ALBO</h1>\n        <AllFilms />\n        <AllPosts />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { GET_FILM_NEWS } from '../actions/filmsActions';\n\nconst initialState = {\n  films: [],\n};\n\n\nexport const newsFilmsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FILM_NEWS:\n      return { ...state, films: action.payload };\n\n    default:\n      return state;\n  }\n};\n\n","import { ADD_POST } from '../actions/postActions';\n\nconst initialState = {\n  posts: [],\n};\n\n\nexport const postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return {...state, posts: [...state.posts, action.payload]};\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { newsFilmsReducer } from './newsFilmsReducer';\nimport { postReducer } from './postReducer';\n\nconst reducers = combineReducers({\n  allFilms: newsFilmsReducer,\n  allPosts: postReducer\n});\n\nexport default reducers;","import { createStore } from 'redux';\nimport reducers from './reducers/reducers';\n\nconst store = createStore(reducers, {}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}